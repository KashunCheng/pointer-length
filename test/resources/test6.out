ValueNumbering: test6
   store i32 %c, i32* %c.addr, align 4    1 = 1
   store i32 %d, i32* %d.addr, align 4    2 = 2
   store i32 %e, i32* %e.addr, align 4    3 = 3
   store i32 %i, i32* %i.addr, align 4    4 = 4
   store i32 %j, i32* %j.addr, align 4    5 = 5
   store i32 10, i32* %a, align 4         6 = 6
   store i32 40, i32* %b, align 4         7 = 7
   %0 = load i32, i32* %i.addr, align 4   4 = 4
   %1 = load i32, i32* %j.addr, align 4   5 = 5
   %mul = mul nsw i32 %0, %1              8 = 4 mul 5
   store i32 %mul, i32* %t1, align 4      8 = 8
   %2 = load i32, i32* %t1, align 4       8 = 8
   %add = add nsw i32 %2, 40              9 = 8 add 7
   store i32 %add, i32* %c.addr, align 4  9 = 9
   store i32 150, i32* %t2, align 4       10 = 10
   %3 = load i32, i32* %c.addr, align 4   9 = 9
   %mul1 = mul nsw i32 150, %3            11 = 10 mul 9
   store i32 %mul1, i32* %d.addr, align 4 11 = 11
   %4 = load i32, i32* %i.addr, align 4   4 = 4
   store i32 %4, i32* %e.addr, align 4    4 = 4
   %5 = load i32, i32* %i.addr, align 4   4 = 4
   %6 = load i32, i32* %j.addr, align 4   5 = 5
   %mul2 = mul nsw i32 %5, %6             8 = 4 mul 5 (redundant)
   store i32 %mul2, i32* %t3, align 4     8 = 8
   %7 = load i32, i32* %i.addr, align 4   4 = 4
   %mul3 = mul nsw i32 %7, 10             12 = 4 mul 6
   store i32 %mul3, i32* %t4, align 4     12 = 12
   %8 = load i32, i32* %t1, align 4       8 = 8
   %9 = load i32, i32* %t4, align 4       12 = 12
   %add4 = add nsw i32 %8, %9             13 = 8 add 12
   store i32 %add4, i32* %c.addr, align 4 13 = 13
